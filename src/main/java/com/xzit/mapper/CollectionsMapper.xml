<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzit.mapper.CollectionsMapper" >
  <resultMap id="BaseResultMap" type="com.xzit.entity.Collections" >
    <id column="collection_id" property="collectionId" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="venuesid" property="venuesid" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="deletestate" property="deletestate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    collection_id, userid, venuesid, state, deletestate
  </sql>
  <select id="selectByExample" resultMap="collectionsinfo" parameterType="com.xzit.entity.CollectionsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from collections
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>

  </select>
  <select id="selectByPrimaryKey" resultMap="collectionsinfo" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from collections
    where collection_id = #{collectionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from collections
    where collection_id = #{collectionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xzit.entity.CollectionsExample" >
    delete from collections
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xzit.entity.Collections" >
    insert into collections (collection_id, userid, venuesid, 
      state, deletestate)
    values (#{collectionId,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{venuesid,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{deletestate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xzit.entity.Collections" >
    insert into collections
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="collectionId != null" >
        collection_id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="venuesid != null" >
        venuesid,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="deletestate != null" >
        deletestate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="collectionId != null" >
        #{collectionId,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="venuesid != null" >
        #{venuesid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="deletestate != null" >
        #{deletestate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xzit.entity.CollectionsExample" resultType="java.lang.Integer" >
    select count(*) from collections
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update collections
    <set >
      <if test="record.collectionId != null" >
        collection_id = #{record.collectionId,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.venuesid != null" >
        venuesid = #{record.venuesid,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.deletestate != null" >
        deletestate = #{record.deletestate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update collections
    set collection_id = #{record.collectionId,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      venuesid = #{record.venuesid,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      deletestate = #{record.deletestate,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xzit.entity.Collections" >
    update collections
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="venuesid != null" >
        venuesid = #{venuesid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="deletestate != null" >
        deletestate = #{deletestate,jdbcType=INTEGER},
      </if>
    </set>
    where collection_id = #{collectionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xzit.entity.Collections" >
    update collections
    set userid = #{userid,jdbcType=INTEGER},
      venuesid = #{venuesid,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      deletestate = #{deletestate,jdbcType=INTEGER}
    where collection_id = #{collectionId,jdbcType=INTEGER}
  </update>
  <resultMap id="collectionsinfo" type="com.xzit.entity.Collections" extends="BaseResultMap">
    <association
            property="user"
            column="userid"
            select="com.xzit.mapper.UserMapper.selectByPrimaryKey"
            javaType="com.xzit.entity.User">
    </association>
    <association
            property="venues"
            column="venuesid"
            select="com.xzit.mapper.VenuesMapper.selectByPrimaryKey"
            javaType="com.xzit.entity.Venues">
    </association>

  </resultMap>
</mapper>